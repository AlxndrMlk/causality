install.packages(dHSIC)
install.packages("dHSIC")
install.packages("mgcv")
install.packages("dplyr")
install.packages("lavaan")
libarary(dHSIC)
libarary(mgcv)
libarary("dHSIC")
library(dHSIC)
library(mgcv)
x <- c(1, 2, 3, 4)
y <- c(1, 5, 6, 7)
HSIC(x, y)
dhsic.test(x, y)
a <- c(1, 2, 3, 4)
b <- c(1, 5, 6, 7)
dhsic.test(x, y)
dhsic.test(a, b)$p.value
a <- c(1, 2, 3, 4)
b <- c(1, 5, 6, 7)
dhsic.test(a, b)$p.value
a <- c(1, 2, 3, 4, 9, 23, 45, 65)
b <- c(1, 5, 6, 7, 1, 11, 23, 43)
dhsic.test(a, b)$p.value
cwd('C:\\Users\\aleks\\OneDrive\\Dokumenty\\EDU\\Causal_Inference\\causality')
getwd()
setwd('C:\\Users\\aleks\\OneDrive\\Dokumenty\\EDU\\Causal_Inference\\causality')
getwd()
read_csv('data\\model_xy.csv')
read.csv('data\\model_xy.csv')
read.csv('data\\xy_model.csv')
read.csv2('data\\xy_model.csv')
xy_data = read.csv2('data\\xy_model.csv')
xy_data[0]
xy_data
xy_data[0,]
xy_data[1,]
xy_data = read.csv('data\\xy_model.csv')
xy_data = read.csv('data\\xy_model.csv')
xy_data[1,]
xy_data[1:2,]
?read.csv
xy_data = read.csv('data\\xy_model.csv', header=FALSE)
xy_data[1:2,]
xy_data[1:5,]
xy_data = read.csv('data\\xy_model.csv', header = FALSE, col.names = c('x', 'y'))
xy_data[1:5,]
setwd('C:\\Users\\aleks\\OneDrive\\Dokumenty\\EDU\\Causal_Inference\\causality')
xy_data = read.csv('data\\xy_model.csv', header = FALSE, col.names = c('a', 'b'))
yx_data = read.csv('data\\yx_model.csv', header = FALSE, col.names = c('a', 'b'))
xy_data['a']
dhsic.test(
xy_data['a'],
xy_data['b']
)$p.value
dhsic.test(
xy_data['a'],
xy_data['b']
)$p.value
dhsic.test(
xy_data['a'],
xy_data['b'])$p.value
dhsic.test(xy_data['a'], xy_data['b'])$p.value
setwd('C:\\Users\\aleks\\OneDrive\\Dokumenty\\EDU\\Causal_Inference\\causality')
xy_data = read.csv('data\\xy_model.csv', header = FALSE, col.names = c('a', 'b'))
yx_data = read.csv('data\\yx_model.csv', header = FALSE, col.names = c('a', 'b'))
dhsic.test(xy_data['a'], xy_data['b'])$p.value
dhsic.test(yx_data['a'], yx_data['b'])$p.value
dhsic.test(xy_data['a'], xy_data['b'])
dhsic.test(yx_data['a'], yx_data['b'])
data.frame
data.frame(a, b)
df = data.frame()
?data.frame
# Test relationship between statistic and p-val
results <- data.frame()
for (i, i++, i < 10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
rbind(results, c(hsic_stat, hsic_p_val))
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
rbind(results, c(hsic_stat, hsic_p_val))
}
results
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results = rbind(results, c(hsic_stat, hsic_p_val))
}
results
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
print(c(hsic_stat, hsic_p_val))
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
cat(hsic_results)
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
print(hsic_results)
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
print(i, hsic_results)
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
print(hsic_results)
}
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
rbind(results, c(hsic_stat, hsic_p_val))
}
results
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results = rbind(results, c(hsic_stat, hsic_p_val))
}
results
# Test relationship between statistic and p-val
results <- data.frame(stat=c(), p_val=c())
results
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results = rbind(results, c(hsic_stat, hsic_p_val))
}
results
# Test relationship between statistic and p-val
results <- data.frame(stat=c(), p_val=c())
names(resultss)
names(results)
names(results) <- c('stat', 'p_val')
# Test relationship between statistic and p-val
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
results
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results = rbind(results, c(hsic_stat, hsic_p_val))
}
results
# Test relationship between statistic and p-val
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results = rbind(results, data.frame(c(hsic_stat, hsic_p_val)))
}
results
# Test relationship between statistic and p-val
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:10) {
a = rnorm(100)
b = rnorm(100)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results[i,] = c(hsic_stat, hsic_p_val)
}
results
# Test relationship between statistic and p-val
N_SAMPLES = 1000
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:10) {
a = rnorm(N_SAMPLES)
b = rnorm(N_SAMPLES)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results[i,] = c(hsic_stat, hsic_p_val)
}
# Test relationship between statistic and p-val
N_SAMPLES = 200
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:10) {
a = rnorm(N_SAMPLES)
b = rnorm(N_SAMPLES)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results[i,] = c(hsic_stat, hsic_p_val)
}
plot(results)
# Test relationship between statistic and p-val
N_SAMPLES = 500
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:10) {
a = rnorm(N_SAMPLES)
b = rnorm(N_SAMPLES)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results[i,] = c(hsic_stat, hsic_p_val)
}
plot(results)
library(ggplot)
install.packages('ggplot2')
library(ggplot)
library(ggplot2)
ggplot(
x = stat,
y = p_val,
data = results) + geom_point()
rlang::last_error()
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point()
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point(alpha = .5, color = 'pink')
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point(alpha = .5, color = 'gray')
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point(alpha = .5, color = 'blue')
results
# Test relationship between statistic and p-val
N_SAMPLES = 200
results <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(results) <- c('stat', 'p_val')
for (i in 1:100) {
a = rnorm(N_SAMPLES)
b = rnorm(N_SAMPLES)
hsic_results = dhsic.test(a, b)
hsic_stat = hsic_results$statistic
hsic_p_val = hsic_results$p.value
results[i,] = c(hsic_stat, hsic_p_val)
}
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point(alpha = .5, color = 'blue')
ggplot(
results, aes(
x = stat,
y = p_val
)
) +
geom_point(alpha = .5, color = 'blue') +
geom_tile('HSIC')
ggplot(
results, aes(
x = stat,
y = p_val
)
) +
geom_point(alpha = .5, color = 'blue') +
geom_tile('HSIC')
ggplot(
results, aes(
x = stat,
y = p_val
)
) + geom_point(alpha = .5, color = 'blue') + geom_tile('HSIC')
ggplot(
results, aes(
x = stat,
y = p_val
)) + geom_point(alpha = .5, color = 'blue') + geom_tile('HSIC')
ggplot(
results, aes(
x = stat,
y = p_val)) + geom_point(alpha = .5, color = 'blue') + geom_tile('HSIC')
results
ggplot(
results, aes(
x = stat,
y = p_val)) + geom_point(alpha = .5, color = 'blue')
+ geom_point(alpha = .5, color = 'blue')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue') + geom_smooth()
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue') + geom_smooth(color='red')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue') +
ggtitle('HMSIC')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue') +
ggtitle('HSIC $x$')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'blue') +
ggtitle('HSIC - statistic vs p-value')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'purple') +
ggtitle('HSIC - statistic vs p-value')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'green') +
ggtitle('HSIC - statistic vs p-value')
ggplot(
results, aes(
x = stat,
y = p_val)
) +
geom_point(alpha = .5, color = 'dark blue') +
ggtitle('HSIC - statistic vs p-value')
